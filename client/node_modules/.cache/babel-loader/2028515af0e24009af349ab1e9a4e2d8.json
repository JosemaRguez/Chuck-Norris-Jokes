{"ast":null,"code":"var _jsxFileName = \"D:\\\\test_express\\\\expresschuckjokes\\\\client\\\\src\\\\components\\\\jokes\\\\JokeDetails.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { saveJoke } from '../../store/actions/jokesActions';\n\nvar JokeDetails = function JokeDetails(props) {\n  var joke = props.joke;\n  saveJoke(props.match.params.id, joke);\n\n  if (joke) {\n    return React.createElement(\"div\", {\n      className: \"container section joke-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card z-depth-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, joke.value), React.createElement(\"p\", {\n      className: \"grey-text right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Category: \", joke.category))), React.createElement(\"button\", {\n      className: \"btn waves-effect #80cbc4 teal lighten-3\",\n      onClick: function onClick() {\n        return props.history.goBack();\n      },\n      type: \"submit\",\n      name: \"action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Back\"));\n  } else {\n    return React.createElement(\"div\", {\n      className: \"container center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Loading joke...\"));\n  }\n};\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  var id = ownProps.match.params.id;\n  var jokes = state.jokes;\n  var joke = jokes ? jokes[id] : null;\n  return {\n    joke: joke\n  };\n};\n\nexport default connect(mapStateToProps)(JokeDetails);","map":{"version":3,"sources":["D:\\test_express\\expresschuckjokes\\client\\src\\components\\jokes\\JokeDetails.js"],"names":["React","connect","saveJoke","JokeDetails","props","joke","match","params","id","value","category","history","goBack","mapStateToProps","state","ownProps","jokes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kCAAzB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA,MACnBC,IADmB,GACVD,KADU,CACnBC,IADmB;AAE3BH,EAAAA,QAAQ,CAACE,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAApB,EAAwBH,IAAxB,CAAR;;AAEA,MAAIA,IAAJ,EAAU;AACN,WACI;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,IAAI,CAACI,KAAT,CADJ,EAEI;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA0CJ,IAAI,CAACK,QAA/C,CAFJ,CADJ,CADJ,EAOI;AAAQ,MAAA,SAAS,EAAC,yCAAlB;AAA4D,MAAA,OAAO,EAAE;AAAA,eAAMN,KAAK,CAACO,OAAN,CAAcC,MAAd,EAAN;AAAA,OAArE;AAAmG,MAAA,IAAI,EAAC,QAAxG;AAAiH,MAAA,IAAI,EAAC,QAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,CADJ;AAYH,GAbD,MAcK;AACD,WACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CADJ;AAKH;AAEJ,CA1BD;;AA4BA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACzC,MAAMP,EAAE,GAAGO,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,EAAjC;AACA,MAAMQ,KAAK,GAAGF,KAAK,CAACE,KAApB;AACA,MAAMX,IAAI,GAAGW,KAAK,GAAGA,KAAK,CAACR,EAAD,CAAR,GAAc,IAAhC;AACA,SAAO;AACHH,IAAAA,IAAI,EAAEA;AADH,GAAP;AAGH,CAPD;;AAUA,eAAeJ,OAAO,CAACY,eAAD,CAAP,CAAyBV,WAAzB,CAAf","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { saveJoke } from '../../store/actions/jokesActions'\r\n\r\nconst JokeDetails = (props) => {\r\n    const { joke } = props\r\n    saveJoke(props.match.params.id, joke)\r\n\r\n    if (joke) {\r\n        return (\r\n            <div className=\"container section joke-details\">\r\n                <div className=\"card z-depth-1\">\r\n                    <div className=\"card-content\">\r\n                        <p>{joke.value}</p>\r\n                        <p className=\"grey-text right\">Category: {joke.category}</p>\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn waves-effect #80cbc4 teal lighten-3\" onClick={() => props.history.goBack()} type=\"submit\" name=\"action\">Back\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading joke...</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id\r\n    const jokes = state.jokes\r\n    const joke = jokes ? jokes[id]: null\r\n    return {\r\n        joke: joke\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(JokeDetails)"]},"metadata":{},"sourceType":"module"}