{"version":3,"sources":["images/chuckArms.png","images/balloon.png","components/layouts/PageLinks.js","components/layouts/Navbar.js","components/jokes/JokesList.js","components/jokes/JokesBoard.js","store/actions/jokesActions.js","store/actions/categoriesActions.js","components/jokes/JokeDetails.js","components/jokes/JokesTop.js","store/actions/topActions.js","App.js","serviceWorker.js","store/reducers/jokeReducer.js","store/reducers/topJokesReducer.js","store/reducers/categoriesReducer.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","PageLinks","react_default","a","createElement","className","NavLink","to","Navbar","Link","layouts_PageLinks","JokeList","_ref","jokes","category","Object","keys","map","joke","String","key","value","JokesBoard","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadJokes","addJoke","showDropdownMenu","event","preventDefault","setState","displayMenu","document","addEventListener","hideDropdownMenu","removeEventListener","handleOnClick","e","categorySelected","target","innerHTML","state","loadingState","getCategories","_this2","refs","iScroll","scrollTop","scrollHeight","clientHeight","_this3","categories","id","onClick","item","style","width","height","left","top","position","alt","src","viewportImage","balloonImage","ref","JokesList","Component","connect","dispatch","fetch","then","res","json","type","catch","err","body","ownProps","match","params","method","headers","Accept","Content-Type","JSON","stringify","clicks","saveJoke","history","goBack","name","JokesTop","componentWillMount","bind","assertThisInitialized","getTop","topJokes","numTop","ownState","num","App","BrowserRouter","layouts_Navbar","Switch","Route","exact","path","component","JokeDetails","Boolean","window","location","hostname","jokeList","jokeReducer","arguments","length","undefined","action","console","log","topJokesReducter","newTopJokes","values","parse","sort","b","slice","categoriesReducer","concat","toConsumableArray","rootReducer","combineReducers","topJokesReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2022c544.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chuckArms.1faa00ea.png\";","module.exports = __webpack_public_path__ + \"static/media/balloon.d1a8dfeb.png\";","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport '../../styles/style.css'\r\n\r\nconst PageLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li className=\"navbar-link\"><NavLink to='/'>Random Jokes</NavLink></li>\r\n            <li className=\"navbar-link\"><NavLink to='/topjokes/5'>Top Jokes</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default PageLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PageLinks from './PageLinks'\r\nimport '../../styles/style.css'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"nav-wrapper\">\r\n            <div className=\"container\">\r\n                <Link to='/' className='brand-logo'>Chuck'sJokes</Link>\r\n                <PageLinks />\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst JokeList = ({ jokes, category }) => {\r\n\r\n    return (\r\n        <div className=\"jokes-list section\">\r\n            {jokes && Object.keys(jokes).map(joke => {\r\n                if (String(jokes[joke].category) === String(category)) {\r\n                    return (\r\n                        <Link to={\"/joke/\" + joke} key={joke}>\r\n                            <div className=\"card z-depth-1\" >\r\n                                <div className=\"card-content grey-text text-darken-3 hoverable\">\r\n                                    <p className=\"black-text\">{jokes[joke].value}</p>\r\n                                    <p className=\"grey-text right\">Category: {jokes[joke].category}</p>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    )\r\n                }\r\n                else if (String(category) === '--Select--') {\r\n                    return (\r\n                        <Link to={\"/joke/\" + joke} key={joke}>\r\n                            <div className=\"card z-depth-1\" >\r\n                                <div className=\"card-content grey-text text-darken-3 hoverable\">\r\n                                    <p className=\"black-text\">{jokes[joke].value}</p>\r\n                                    <p className=\"grey-text right\">Category: {jokes[joke].category}</p>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    )\r\n                }\r\n                else {\r\n                    return null\r\n                }\r\n            }\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JokeList","import React, { Component } from 'react'\r\nimport JokeList from './JokesList'\r\nimport { connect } from 'react-redux'\r\nimport { addJoke } from '../../store/actions/jokesActions'\r\nimport { getCategories } from '../../store/actions/categoriesActions'\r\nimport viewportImage  from '../../images/chuckArms.png'\r\nimport balloonImage  from '../../images/balloon.png'\r\nimport '../../styles/style.css'\r\n\r\nclass JokesBoard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loadingState: false,\r\n            displayMenu: false,\r\n            categorySelected: '--Select--'\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.props.getCategories()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refs.iScroll.scrollTop = this.refs.iScroll.scrollHeight-2\r\n        \r\n        //Load first jokes until user can scroll on viewport\r\n        this.refs.iScroll.addEventListener(\"wheel\", () => {\r\n                if(this.refs.iScroll.scrollTop <= 0){\r\n                    this.setState({ loadingState: true })\r\n                    this.loadJokes()\r\n                    this.setState({ loadingState: false })\r\n                }\r\n        })\r\n\r\n\r\n        this.refs.iScroll.addEventListener(\"scroll\", () => {\r\n            if (((this.refs.iScroll.scrollTop + this.refs.iScroll.clientHeight) >= (this.refs.iScroll.scrollHeight - (this.refs.iScroll.scrollHeight * 0.001))) && !this.state.loadingState ) {\r\n                this.refs.iScroll.scrollTop -= (this.refs.iScroll.scrollHeight * 0.002)\r\n                this.setState({ loadingState: true })\r\n                this.loadJokes()\r\n                this.setState({ loadingState: false })\r\n            }\r\n        })\r\n    }\r\n\r\n    loadJokes = () => {\r\n        this.props.addJoke()\r\n    }\r\n\r\n    showDropdownMenu = (event) => {\r\n        event.preventDefault()\r\n        this.setState({ displayMenu: true }, () => {\r\n            document.addEventListener('click', this.hideDropdownMenu)\r\n        })\r\n    }\r\n\r\n    hideDropdownMenu = () => {\r\n        this.setState({ displayMenu: false }, () => {\r\n            document.removeEventListener('click', this.hideDropdownMenu);\r\n        })\r\n    }\r\n\r\n    handleOnClick = (e) => {\r\n        e.preventDefault()\r\n        this.setState({categorySelected: e.target.innerHTML})\r\n    }\r\n\r\n    render() {\r\n        const { jokes } = this.props\r\n        const { categories } = this.props\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"dropdown\">\r\n                    <p className=\"category-text\">Filter by category</p>\r\n                    <div className=\"dropDownButton\" id=\"dropdownSelected\" onClick={this.showDropdownMenu}>{this.state.categorySelected}</div>\r\n                    {this.state.displayMenu && <ul className=\"dropdownList\" id=\"style-3\">\r\n                        {categories.map(item => (\r\n                            <li className=\"list\" key={item} onClick={this.handleOnClick}>{item}</li>\r\n                        ))}\r\n                    </ul>}\r\n                </div>\r\n                \r\n                <img style={{width: '203px', height:'550px', left: '30px', top: '82px', position: 'absolute'}} alt='png' src={viewportImage} />\r\n                <img style={{width: '600px', height:'125px', left:'220px', top: '30px', position: 'relative'}} alt='png' src={balloonImage} />\r\n                <div className=\"jokesContainer\">\r\n                    <div\r\n                        className=\"scrollbar\" id=\"style-1\"\r\n                        ref=\"iScroll\"\r\n                    >\r\n                        <h4 className=\"category-text\">SCROLL HERE TO LOAD JOKES!</h4>\r\n                        <div className='container'>\r\n                            <div className=\"col s12 m10\">\r\n                                <JokeList jokes={jokes} category={this.state.categorySelected}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addJoke: () => dispatch(addJoke()),\r\n        getCategories: () => dispatch(getCategories())\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        jokes: state.jokes,\r\n        categories: state.categories\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(JokesBoard)","export const addJoke = () => {\r\n    return (dispatch) => {\r\n        fetch(\"/getjoke\")\r\n            .then(res => res.json())\r\n            .then(joke => dispatch({ type: 'ADD_JOKE', joke }))\r\n            .catch((err) => {\r\n                dispatch({ type: 'ADD_JOKE_ERROR', err })\r\n            })\r\n    }\r\n}\r\n\r\nexport const saveJoke = (id, joke) => {\r\n    fetch(\"/savejoke\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ id: id, value: joke.value, category: joke.category, clicks: 1 })\r\n    })\r\n}\r\n","export const getCategories = () => {\r\n    return (dispatch) => {\r\n        fetch(\"/getcategories\")\r\n            .then(res => res.json())\r\n            .then(categories => dispatch({ type: 'GET_CATEGORIES', categories: categories.body }))\r\n            .catch((err) => {\r\n                dispatch({ type: 'GET_CATEGORIES_ERROR', err })\r\n            })\r\n    }\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { saveJoke } from '../../store/actions/jokesActions'\r\n\r\nconst JokeDetails = (props) => {\r\n    const { joke } = props\r\n    saveJoke(props.match.params.id, joke)\r\n\r\n    if (joke) {\r\n        return (\r\n            <div className=\"container section joke-details\">\r\n                <div className=\"card z-depth-1\">\r\n                    <div className=\"card-content\">\r\n                        <p>{joke.value}</p>\r\n                        <p className=\"grey-text right\">Category: {joke.category}</p>\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn waves-effect #80cbc4 teal lighten-3\" onClick={() => props.history.goBack()} type=\"submit\" name=\"action\">Back\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading joke...</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id\r\n    const jokes = state.jokes\r\n    const joke = jokes ? jokes[id]: null\r\n    return {\r\n        joke: joke\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(JokeDetails)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getTop } from '../../store/actions/topActions'\r\nimport '../../styles/style.css'\r\n\r\nclass JokesTop extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.componentWillMount = this.componentWillMount.bind(this)\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.getTop()\r\n    }\r\n\r\n    render() {\r\n        const { topJokes } = this.props\r\n        const { numTop } = this.props\r\n        \r\n        return (\r\n            <div className=\"jokesTopContainer\">\r\n                <h1 className=\"category-text\">TOP {numTop} JOKES</h1>\r\n                {topJokes && topJokes.map(joke => {\r\n                    return (\r\n                        <div className=\"card z-depth-1\" key={joke.id} >\r\n                            <div className=\"card-content grey-text text-darken-3 hoverable\">\r\n                                <p className=\"black-text\">{joke.value}</p>\r\n                                <p className=\"grey-text right\">Clicks: {joke.clicks}, Category: {joke.category}</p>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownState) => {\r\n    return {\r\n        getTop: () => dispatch(getTop(ownState.match.params.num))\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownState) => {\r\n    \r\n    return {\r\n        topJokes: state.topJokes,\r\n        numTop: ownState.match.params.num\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(JokesTop)","export const getTop = (num) => {\r\n    return (dispatch) => {\r\n        fetch(\"/gettop\")\r\n            .then(res => res.json())\r\n            .then(topJokes => dispatch({ type: 'GET_TOP', topJokes, numTop: num}))\r\n            .catch((err) => {\r\n                dispatch({ type: 'TOP_JOKE_ERROR', err })\r\n            })\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport Navbar from './components/layouts/Navbar'\r\nimport JokesBoard from './components/jokes/JokesBoard'\r\nimport JokeDetails from './components/jokes/JokeDetails'\r\nimport JokesTop from './components/jokes/JokesTop'\r\nimport './styles/style.css'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <div className=\"Navbar\">\r\n            <Navbar />\r\n            <Switch >\r\n              <Route exact path='/' component={JokesBoard} />\r\n              <Route path='/topjokes/:num' component={JokesTop} /> \r\n              <Route path='/joke/:id' component={JokeDetails} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const jokeList = {}\r\n\r\n\r\nconst jokeReducer = (state = jokeList, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_JOKE': var category = action.joke.body.category\r\n            if (category === null) { category = \"none\" }\r\n            state[action.joke.body.id] = { value: action.joke.body.value, category: category }\r\n            return state\r\n        case 'ADD_JOKE_ERROR': console.log('add joke error', action.err)\r\n            break\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default jokeReducer","const topJokes = []\r\n\r\nconst topJokesReducter = (state = topJokes, action) => {\r\n    switch (action.type) {\r\n        case 'GET_TOP': var newTopJokes = Object.values(JSON.parse(action.topJokes)).sort(function(a,b){ return b.clicks-a.clicks})\r\n            //Get first N elements of the top\r\n            state.topJokes = newTopJokes.slice(0, action.numTop)\r\n            return state.topJokes\r\n        case 'TOP_JOKE_ERROR': console.log('Error getting top jokes', action.err)\r\n            break\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default topJokesReducter","const categories = []\r\n\r\nconst categoriesReducer = (state = categories, action) => {\r\n    switch (action.type) {\r\n        case 'GET_CATEGORIES': return ['--Select--', ...action.categories]\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default categoriesReducer","import jokeReducer from './jokeReducer'\r\nimport topJokesReducer from './topJokesReducer'\r\nimport categoriesReducer from './categoriesReducer'\r\nimport { combineReducers } from 'redux'\r\n\r\nconst rootReducer = combineReducers({\r\n    categories: categoriesReducer,\r\n    jokes: jokeReducer,\r\n    topJokes: topJokesReducer\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport rootReducer from './store/reducers/rootReducer'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}